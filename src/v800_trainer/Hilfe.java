package v800_trainer;

/*
 * Hilfe.java
 *
 * SourceFile is part of Chainwheel

 * Window for HelpText / Program Info
 */



/**
 *
 * @author  volker hochholzer
 * 
 * Chainwheel and all dependend source files is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Chainwheel is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

 
 */


import java.io.FileInputStream;


import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

import javax.swing.ImageIcon;



public class Hilfe extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form Hilfe
     */
    public Hilfe(JCicloTronic JCicloTronicHandle) {
        initComponents();

        int n = 0;
        byte a[] = new byte[1];
        setTitle("ChainWheel     V3");
        ImageIcon icon = new ImageIcon("hw.jpg");
        setIconImage(icon.getImage());

        StringBuffer dummy = new StringBuffer();
        try {
            FileInputStream in = new FileInputStream("Bedienungsanleitung.rtf");
            do {
                n = in.read(a);
                dummy.append(new String(a));
            } while (n != -1);
            in.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "IO-Fehler beim Laden der Textdatei", "Achtung!", JOptionPane.ERROR_MESSAGE);
        }

        jEditorPane1.setContentType("text/rtf");
        jEditorPane1.setFont(new Font(JCicloTronicHandle.Font, 1, JCicloTronicHandle.FontSize));
        jEditorPane1.setText(dummy.toString());

        setVisible(true);
        timer = new Timer(50, this);
        timer.start();

    }

   
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chainwheel V3");
        setPreferredSize(new java.awt.Dimension(100, 100));
        setResizable(false);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0};
        getContentPane().setLayout(layout);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        getContentPane().add(jButton1, gridBagConstraints);

        jEditorPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jEditorPane1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jEditorPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel4, gridBagConstraints);

        setSize(new java.awt.Dimension(663, 500));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jEditorPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEditorPane1MouseClicked
      
        Intervall = 99999999;
    }//GEN-LAST:event_jEditorPane1MouseClicked
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        setVisible(false);
        dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    public void actionPerformed(ActionEvent e) {
        
        if (Intervall > jEditorPane1.getSize().getHeight() - jScrollPane1.getSize().getHeight()) {
            timer.stop();
            return;
        }

        JViewport View = jScrollPane1.getViewport();
        View.setViewPosition(new Point(0, Intervall++));

        Intervall = 99999;
        repaint();
    }
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private int Intervall;
    private Timer timer;
}
